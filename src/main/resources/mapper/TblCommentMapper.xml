<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nines.blog.dao.TblCommentMapper">
  <resultMap id="BaseResultMap" type="cn.nines.blog.pojo.TblComment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="nike_name" jdbcType="VARCHAR" property="nikeName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="chat_head" jdbcType="VARCHAR" property="chatHead" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="parent_nike_name" jdbcType="VARCHAR" property="parentNikeName" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="is_blogger" jdbcType="BIT" property="isBlogger" />
    <result column="is_effective" jdbcType="BIT" property="isEffective" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, nike_name, email, chat_head, content, article_id, parent_id, parent_nike_name, 
    ip, is_blogger, is_effective, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="cn.nines.blog.pojo.TblCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tbl_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.nines.blog.pojo.TblCommentExample">
    delete from tbl_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.nines.blog.pojo.TblComment">
    insert into tbl_comment (id, nike_name, email, 
      chat_head, content, article_id, 
      parent_id, parent_nike_name, ip, 
      is_blogger, is_effective, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{nikeName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{chatHead,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{articleId,jdbcType=BIGINT}, 
      #{parentId,jdbcType=BIGINT}, #{parentNikeName,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{isBlogger,jdbcType=BIT}, #{isEffective,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.nines.blog.pojo.TblComment">
    insert into tbl_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nikeName != null">
        nike_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="chatHead != null">
        chat_head,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="parentNikeName != null">
        parent_nike_name,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="isBlogger != null">
        is_blogger,
      </if>
      <if test="isEffective != null">
        is_effective,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="nikeName != null">
        #{nikeName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="chatHead != null">
        #{chatHead,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="parentNikeName != null">
        #{parentNikeName,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="isBlogger != null">
        #{isBlogger,jdbcType=BIT},
      </if>
      <if test="isEffective != null">
        #{isEffective,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.nines.blog.pojo.TblCommentExample" resultType="java.lang.Long">
    select count(*) from tbl_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tbl_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.nikeName != null">
        nike_name = #{record.nikeName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.chatHead != null">
        chat_head = #{record.chatHead,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.parentNikeName != null">
        parent_nike_name = #{record.parentNikeName,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.isBlogger != null">
        is_blogger = #{record.isBlogger,jdbcType=BIT},
      </if>
      <if test="record.isEffective != null">
        is_effective = #{record.isEffective,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tbl_comment
    set id = #{record.id,jdbcType=BIGINT},
      nike_name = #{record.nikeName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      chat_head = #{record.chatHead,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      article_id = #{record.articleId,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      parent_nike_name = #{record.parentNikeName,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      is_blogger = #{record.isBlogger,jdbcType=BIT},
      is_effective = #{record.isEffective,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.nines.blog.pojo.TblComment">
    update tbl_comment
    <set>
      <if test="nikeName != null">
        nike_name = #{nikeName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="chatHead != null">
        chat_head = #{chatHead,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="parentNikeName != null">
        parent_nike_name = #{parentNikeName,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="isBlogger != null">
        is_blogger = #{isBlogger,jdbcType=BIT},
      </if>
      <if test="isEffective != null">
        is_effective = #{isEffective,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.nines.blog.pojo.TblComment">
    update tbl_comment
    set nike_name = #{nikeName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      chat_head = #{chatHead,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      article_id = #{articleId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      parent_nike_name = #{parentNikeName,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      is_blogger = #{isBlogger,jdbcType=BIT},
      is_effective = #{isEffective,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>